{"ast":null,"code":"// userSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// we have four states that will be used all over the website\nconst initialState = {\n  user: null,\n  // store user email\n  userId: null,\n  // store user's unique id that is in the database\n  token: null,\n  // jwt token\n  picture: null // user's profile picture\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n    setToken: (state, action) => {\n      state.token = action.payload;\n    },\n    setPicture: (state, action) => {\n      state.picture = action.payload;\n    },\n    setUserId: (state, action) => {\n      state.userId = action.payload;\n    },\n    // clear all states when user logs out\n    clearUser: state => {\n      state.user = null;\n      state.token = null;\n      state.picture = null;\n      state.userId = null;\n    }\n  }\n});\nexport const {\n  setUser,\n  setUserId,\n  setToken,\n  setPicture,\n  clearUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","userId","token","picture","userSlice","name","reducers","setUser","state","action","payload","setToken","setPicture","setUserId","clearUser","actions","reducer"],"sources":["E:/Uploads/New folder/hackathonfrontend/src/Store/userSlice.js"],"sourcesContent":["// userSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\n\n// we have four states that will be used all over the website\nconst initialState = {\n  user: null, // store user email\n  userId: null, // store user's unique id that is in the database\n  token: null, // jwt token\n  picture: null, // user's profile picture\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n    setToken: (state, action) => {\n      state.token = action.payload;\n    },\n    setPicture: (state, action) => {\n      state.picture = action.payload;\n    },\n    setUserId: (state, action) => {\n      state.userId = action.payload;\n    },\n    // clear all states when user logs out\n    clearUser: (state) => {\n      state.user = null;\n      state.token = null;\n      state.picture = null;\n      state.userId = null;\n    },\n  },\n});\n\nexport const { setUser, setUserId, setToken, setPicture, clearUser } = userSlice.actions;\nexport default userSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EAAE;EACZC,MAAM,EAAE,IAAI;EAAE;EACdC,KAAK,EAAE,IAAI;EAAE;EACbC,OAAO,EAAE,IAAI,CAAE;AACjB,CAAC;;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACC,OAAO;IAChC,CAAC;IACDG,SAAS,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACP,MAAM,GAAGQ,MAAM,CAACC,OAAO;IAC/B,CAAC;IACD;IACAI,SAAS,EAAGN,KAAK,IAAK;MACpBA,KAAK,CAACR,IAAI,GAAG,IAAI;MACjBQ,KAAK,CAACN,KAAK,GAAG,IAAI;MAClBM,KAAK,CAACL,OAAO,GAAG,IAAI;MACpBK,KAAK,CAACP,MAAM,GAAG,IAAI;IACrB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM,OAAO;EAAEM,SAAS;EAAEF,QAAQ;EAAEC,UAAU;EAAEE;AAAU,CAAC,GAAGV,SAAS,CAACW,OAAO;AACxF,eAAeX,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}